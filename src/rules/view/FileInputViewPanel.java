/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FileInputViewPanel.java
 *
 * Created on 2010-10-23, 22.45.55
 */

package rules.view;

import java.beans.PropertyChangeEvent;
import java.util.Vector;
import javax.swing.DefaultListModel;
import rules.controller.AlgoController;
import rules.controller.FileInputController;
import rules.model.Fact;
import rules.model.Production;

/**
 *
 * @author Martynas
 */
public class FileInputViewPanel extends AbstractViewPanel {

    private FileInputController controller;

    /** Creates new form FileInputViewPanel */
    public FileInputViewPanel(FileInputController controller) {
        this.controller = controller;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputFileList = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputRules = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        inputFacts = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        inputTarget = new javax.swing.JTextField();

        inputFileList.setMaximumRowCount(16);
        inputFileList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        inputFileList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFileListActionPerformed(evt);
            }
        });

        inputRules.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(inputRules);

        jLabel1.setText("Pradiniai faktai: ");

        inputFacts.setText("jTextField1");

        jLabel2.setText("Tikslas: ");

        inputTarget.setText("jTextField1");
        inputTarget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTargetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addComponent(inputFileList, 0, 166, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(inputTarget, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(inputFacts, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputFileList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputFacts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(inputTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public void modelPropertyChange(final PropertyChangeEvent evt) {

        if (evt.getPropertyName().equals(FileInputController.INPUT_FILE_LIST)) {

            Vector<String> newVectorValue = (Vector<String>)evt.getNewValue();

            Vector<String> oldVectorValue = new Vector<String>();
            int itemCount = inputFileList.getItemCount();
            for (int i = 0; i < itemCount; i++) {
                oldVectorValue.add((String)inputFileList.getItemAt(i));
            }

            if (!oldVectorValue.equals(newVectorValue)) {
                inputFileList.removeAllItems();
                for (String item: newVectorValue) {
                    inputFileList.addItem(item);
                }
            }
        }
        else if (evt.getPropertyName().equals(FileInputController.INPUT_PRODUCTIONS)) {
            Vector<Production> productions = (Vector<Production>)evt.getNewValue();

            DefaultListModel listModel = new DefaultListModel();

            try {
                for (Production p: productions) {
                    listModel.addElement(p.toString());
                }
            } catch (NullPointerException ex) {
                listModel.addElement("");
            }

            inputRules.setModel(listModel);
        }
        else if (evt.getPropertyName().equals(FileInputController.INPUT_FACTS)) {
            Vector<Fact> facts = (Vector<Fact>)evt.getNewValue();

            try {
                inputFacts.setText(facts.toString());
            } catch (NullPointerException ex) {
                inputFacts.setText("");
            }
        }
        else if (evt.getPropertyName().equals(FileInputController.INPUT_TARGET)) {
            Fact f = (Fact)evt.getNewValue();

            try {
                inputTarget.setText(f.toString());
            } catch (Exception ex) {
                inputTarget.setText("");
            }
        }
        else if(evt.getPropertyName().equals(AlgoController.SELECTED_PRODUCTION)) {
            Integer value = (Integer)evt.getNewValue();

            if (value == -1) {
                inputRules.clearSelection();
            }
            else {
                inputRules.setSelectedIndex(value.intValue());
            }
        }
    }

    private void inputFileListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFileListActionPerformed
        controller.changeInputFileName((String)inputFileList.getSelectedItem());
    }//GEN-LAST:event_inputFileListActionPerformed

    private void inputTargetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTargetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTargetActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField inputFacts;
    private javax.swing.JComboBox inputFileList;
    private javax.swing.JList inputRules;
    private javax.swing.JTextField inputTarget;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
